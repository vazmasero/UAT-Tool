[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "uat-tool"
version = "1.0.0"
description = "ENAIRE U-space UAT Tool"
authors = [
    {name = "Tu Nombre", email = "tu@email.com"}
]
dependencies = [
    "PySide6>=6.5.0",
    "SQLAlchemy>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.0.0",
    "pytest-metadata>=3.0.0",
    "coverage>=7.0.0",
    "ruff>=0.1.0",
    "vulture>=2.0.0",
    "debugpy>=1.0.0",
]

docs = [
    "Sphinx>=8.0.0",
    "sphinx-rtd-theme>=3.0.0",
    "alabaster>=1.0.0",
    "babel>=2.0.0",
    "docutils>=0.20.0",
    "Jinja2>=3.0.0",
    "Pygments>=2.10.0",
    "snowballstemmer>=3.0.0",
    "sphinxcontrib-applehelp>=2.0.0",
    "sphinxcontrib-devhelp>=2.0.0",
    "sphinxcontrib-htmlhelp>=2.0.0",
    "sphinxcontrib-qthelp>=2.0.0",
    "sphinxcontrib-serializinghtml>=2.0.0",
]

test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.0.0",
    "pytest-metadata>=3.0.0",
    "coverage>=7.0.0",
]

all = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.0.0",
    "pytest-metadata>=3.0.0",
    "coverage>=7.0.0",
    "ruff>=0.1.0",
    "vulture>=2.0.0",
    "debugpy>=1.0.0",
    "Sphinx>=8.0.0",
    "sphinx-rtd-theme>=3.0.0",
    "alabaster>=1.0.0",
    "babel>=2.0.0",
    "docutils>=0.20.0",
    "Jinja2>=3.0.0",
    "Pygments>=2.10.0",
    "snowballstemmer>=3.0.0",
    "sphinxcontrib-applehelp>=2.0.0",
    "sphinxcontrib-devhelp>=2.0.0",
    "sphinxcontrib-htmlhelp>=2.0.0",
    "sphinxcontrib-qthelp>=2.0.0",
    "sphinxcontrib-serializinghtml>=2.0.0",
]

[tool.setuptools]
packages = {find = {where = ["src"]}}

# Configuración de Ruff
[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "UP"]
ignore = ["E501"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.ruff.isort]
known-first-party = ["uat_tool"]
classes = ["constants", "models", "services", "repositories", "controllers", "views"]

# Configuración de pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--import-mode=importlib",
    "--cov=uat_tool",
    "--cov-report=html",
    "--cov-report=term",
    "--tb=short",
    "--strict-markers",
    "--strict-config"
]

# Configuración de coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\\\bProtocol\\\\):",
    "@(abc\\\\.)?abstractmethod"
]